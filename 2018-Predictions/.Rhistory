) + geom_histogram(aes(x = PercentCap))
Clusters
#
Clusters <- Final %>% ggplot(aes(x = capCluster)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Percent-cap') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
) + geom_histogram(aes(x = PercentCap)) + scale_x_continuous(limits = c(0,.4))
Clusters
#
Clusters <- Final %>% ggplot(aes(x = capCluster)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Percent-cap') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
#
Clusters <- Final %>% ggplot(aes(x = capCluster)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Percent-cap') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
#
Clusters
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.4))
PercentCap
Clusters <- Final %>% ggplot(aes(x = capCluster)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
Clusters
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.2))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.4))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap, fill = capCluster)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.4))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap, fill = capCluster)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.4))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap, fill = capCluster)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.5))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap, fill = capCluster)) + geom_histogram(bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(fill = capCluster), bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(col = capCluster), bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(Fill = capCluster), bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(fill = capCluster), bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
Final$cap1 <- ordered(Final$capCluster,
levels = c(1,2,3,4,5,6,7,8),
labels = c("1", "2", "3",'4','5','6','7','8'))
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(fill = cap1), bins = 15) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) + geom_histogram(aes(fill = cap1), bins = 18) + scale_x_continuous(limits = c(0,.42))
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 18) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided')
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 18) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster')
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 18) +
scale_x_continuous(limits = c(0,.42)) +
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 18) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided')
theme(
title = element_text(size = 20)
)
PercentCap
Final$cap1 <- ordered(Final$capCluster,
levels = c(1,2,3,4,5,6,7,8),
labels = c("1", "2", "3",'4','5','6','7','8'))
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 18) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided')
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided')
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided') +
theme(
title = element_text(size = 20)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided') +
theme(
title = element_text(size = 20), axis.title.y = element_blank()
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is divided') +
theme(
title = element_text(size = 20), axis.title.y = element_blank()
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is Divided') +
ylab('Number of Players') +
theme(
title = element_text(size = 20), axis.title.y = element_blank()
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is Divided') +
ylab('Number of Players') +
theme(
title = element_text(size = 20), axis.title.y = element_blank(),
legend.title = element_text(size = 10)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is Divided') +
ylab('Number of Players') +
theme(
title = element_text(size = 20), axis.title.y = element_blank(),
legend.title = element_text(size = 12)
)
PercentCap
PercentCap <- Final %>% ggplot(aes(x = PercentCap)) +
geom_histogram(aes(fill = cap1), bins = 15) +
scale_x_continuous(limits = c(0,.42)) +
labs(fill = 'Cluster', title = 'How Percent-cap is Divided') +
ylab('Number of Players') +
theme(
title = element_text(size = 17), axis.title.y = element_blank(),
legend.title = element_text(size = 12)
)
PercentCap
Clusters <- Final %>% ggplot(aes(x = capCluster, col = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1)) + labs(fill = 'Cluster') +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank()
)
Clusters
library(DataComputing)
library(tidyr)
library(printr)
library(dplyr)
years <- c("2011", "2012", "2013", "2014", "2015",
"2016", "2017")
capNumber <- function(year) {
if (year == "2011") {
return(58044000)
} else if (year == "2012") {
return(58044000)
} else if (year == "2013") {
return(58679000)
} else if (year == "2014") {
return(63065000)
} else if (year == "2015") {
return(70000000)
} else if (year == "2016") {
return(94143000)
} else {
return(99093000)
}
}
clusters <- function(salary) {
if (salary < 800000) {
return(1)
} else if (salary < 1500000) {
return(2)
} else if (salary < 3000000) {
return(3)
} else if (salary < 5000000) {
return(4)
} else if (salary < 8000000) {
return(5)
} else if (salary < 10000000) {
return(6)
} else if (salary < 12500000) {
return(7)
} else if (salary < 15000000) {
return(8)
} else if (salary < 18000000) {
return(9)
} else {
return(10)
}
}
capClusters <- function(salary) {
if (salary < .02) {
return(1)
} else if (salary < .04) {
return(2)
} else if (salary < .07) {
return(3)
} else if (salary < .1) {
return(4)
} else if (salary < .13) {
return(5)
} else if (salary < .16) {
return(6)
} else if (salary < .19) {
return(7)
} else {
return(8)
}
}
wrangleSet <- function(year) {
salName <- paste("~/Desktop/NBA-FA-SAGB/salary-data/fa-salary-corrected/",
year, ".csv", sep = "")
statName <- paste("~/Desktop/NBA-FA-SAGB/standardized-data/", year,".csv", sep = "")
sal <- read.csv(salName, stringsAsFactors = FALSE)
stat <-read.csv(statName, stringsAsFactors = FALSE)
salary <- sal %>% select(average.salary, name)
data <- stat %>% inner_join(sal, c("fix" = "name"))
cap <- capNumber(year)
final <- data %>% select(name = fix, DRB, TOV, PPG = PS.G, VORP, Salary = average.salary) %>%
filter(Salary >= 300000) %>% mutate(PercentCap = Salary/cap)
# %>% mutate_each_(funs(scale(.) %>% as.vector), vars=c("Salary"))
final <- final %>% mutate(Cluster = sapply(Salary, clusters),
capCluster = sapply(PercentCap, capClusters))
final
return(final)
}
data2011 <- wrangleSet("2011")
data2012 <- wrangleSet("2012")
data2013 <- wrangleSet("2013")
data2014 <- wrangleSet("2014")
data2015 <- wrangleSet("2015")
data2016 <- wrangleSet("2016")
data2017 <- wrangleSet("2017")
final <- rbind(data2011, data2012, data2013, data2014,
data2015, data2016, data2017)
write.csv(final, "~/Desktop/percentCaptest.csv")
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  + guides(fill = FALSE) +
theme(
title = element_text(size = 20), axis.text.y = element_blank(),
axis.title.y = element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  + guides(fill = FALSE) +
theme(
title = element_text(size = 20),
legend.title = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') + ylab('Number of Players') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  + guides(fill = FALSE) +
theme(
title = element_text(size = 20),
legend.title = element_blank()
)
Clusters
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') + ylab('Number of Players') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  + guides(fill = FALSE) +
theme(
title = element_text(size = 20), axis.title.y = element_text(size = 12)
legend.title = element_blank()
Clusters <- Final %>% ggplot(aes(x = capCluster, fill = cap1)) +
geom_bar() +
xlab('Cluster') + ggtitle('Distribution of Clusters') + ylab('Number of Players') +
scale_x_discrete(label = waiver(), breaks = seq(1, 8, 1), limits = seq(1, 8, 1))  + guides(fill = FALSE) +
theme(
title = element_text(size = 20), axis.title.y = element_text(size = 12),
legend.title = element_blank()
)
Clusters
knitr::opts_chunk$set(echo = TRUE)
library(DataComputing)
library(tidyr)
library(printr)
library(dplyr)
library(scales)
predict <- read.csv("~/Desktop/NBA-FA-Paper/stats-per-error-cluster-test.csv")
head(predict)
clusters <- predict %>% select(PPG = PPG_X)
clusters <- predict %>% select(PPG = 'PPG_X')
clusters <- predict %>% select(PPG = `PPG_X`)
help(select)
clusters <- predict %>% select(PPG_x, DRB_x,TOV_x,VORP_x,prediction)
help(summarize)
clusters <- predict %>% select(PPG_x, DRB_x,TOV_x,VORP_x,prediction) %>%
group_by(prediction) %>% summarise(PPG = mean(PPG_x),
DRB = mean(DRB_x),
TOV = mean(TOV_x),
VORP = mean(VORP_x))
clusters <- predict %>% select(PPG_x, DRB_x,TOV_x,VORP_x,prediction) %>%
group_by(prediction) %>% summarise(PPG = mean(PPG_x),
DRB = mean(DRB_x),
TOV = mean(TOV_x),
VORP = mean(VORP_x))
clusters
predict <- read.csv("~/Desktop/NBA-FA-Paper/stats-per-error-cluster-all.csv")
head(predict)
clusters <- predict %>% select(PPG_x, DRB_x,TOV_x,VORP_x,prediction) %>%
group_by(prediction) %>% summarise(PPG = mean(PPG_x),
DRB = mean(DRB_x),
TOV = mean(TOV_x),
VORP = mean(VORP_x))
clusters
head(source)
source <- read.csv("~/Desktop/NBA-FA-Paper/FINAL.csv")
predict <- read.csv("~/Desktop/NBA-FA-Paper/stats-per-error-cluster-all.csv")
predict
head(source)
sce <- read.csv("~/Desktop/NBA-FA-Paper/FINAL.csv")
predict <- read.csv("~/Desktop/NBA-FA-Paper/stats-per-error-cluster-all.csv")
predict
head(sce)
dist <- sce %>% group_by(capCluster) %>%
summarise(PPG = mean(PPG),
DRB = mean(DRB),
TOV = mean(TOV),
VORP = mean(VORP))
dist
write.csv(dist, "~/Desktop/NBA-FA-Paper/statsForAll.csv")
write.csv(dist, "~/Desktop/NBA-FA-Paper/statsForPredict.csv")
write.csv(dist, "~/Desktop/NBA-FA-Paper/statsForAll.csv")
write.csv(clusters, "~/Desktop/NBA-FA-Paper/statsForPredict.csv")
Per36 <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/PerGame-2017wrangled.csv", stringsAsFactors = FALSE)
Adv <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/Adv-2017wrangled.csv", stringsAsFactors = FALSE)
Final <- read.csv("~/Desktop/NBA-FA-SAGB/FINAL.csv", stringsAsFactors = FALSE)
knn <- read.csv("~/Desktop/NBA-FA-SAGB/KNN.csv", stringsAsFactors = FALSE)
Per36 <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/PerGame-2017wrangled.csv", stringsAsFactors = FALSE)
Adv <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/Adv-2017wrangled.csv", stringsAsFactors = FALSE)
Final <- read.csv("~/Desktop/NBA-FA-SAGB/FINAL.csv", stringsAsFactors = FALSE)
knn <- read.csv("~/Desktop/NBA-FA-SAGB/knn.csv", stringsAsFactors = FALSE)
Per36 <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/PerGame-2017wrangled.csv", stringsAsFactors = FALSE)
Adv <- read.csv("~/Desktop/NBA-FA-SAGB/player-data-wrangled/player2017/Adv-2017wrangled.csv", stringsAsFactors = FALSE)
Final <- read.csv("~/Desktop/NBA-FA-SAGB/FINAL.csv", stringsAsFactors = FALSE)
knn <- read.csv("~/Desktop/NBA-FA-Paper/KNN.csv", stringsAsFactors = FALSE)
head(knn)
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point()
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point()
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point() +
xlab("Amount of Neighbors") + ylab("Error")
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point() +
xlab("Amount of Neighbors") + ylab("Error") +
title("Number of Neighbors vs. Average Error")
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point() +
xlab("Amount of Neighbors") + ylab("Error") +
ggtitle("Number of Neighbors vs. Average Error")
KNNscatter
head(knn)
Chosen <- subset(knn, k.neighbors == "error")
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point() +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error")
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .2) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error")
KNNscatter
head(knn)
Chosen <- subset(knn, k.neighbors == "error")
Chosen
head(knn)
Chosen <- subset(knn, k.neighbors == 17)
Chosen
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .2) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error")
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error")
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust=1)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust=10)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust=2)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust= -2)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust= -1.5)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust= -1.5, size = 8)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors", vjust= -1.5, size = 2)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors (n = 17)", vjust= -1.5, size = 2)
KNNscatter
KNNscatter<- knn %>% ggplot(aes(x = k.neighbors, y = error)) + geom_point(alpha = .7) +
xlab("Amount of Neighbors") + ylab("Error") + geom_point(data=Chosen, colour="red") +
ggtitle("Number of Neighbors vs. Average Error") +
geom_text(data = Chosen, label="Chosen Neighbors (k = 17)", vjust= -1.5, size = 2)
KNNscatter
